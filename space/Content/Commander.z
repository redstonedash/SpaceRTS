class Commander : ZilchComponent
{
    var NearDirection : Real3 = Real3();
    var FarDirection : Real3 = Real3();
    var Xbone:Gamepad;
    [Property]
    var PlayerNum:Integer=0;
    [Property]
    var PlayerControlled:Boolean = false;
    var Units:Array[Cog] = Array[Cog]();
    [Property]
    var ArchBoi:Archetype = null;
    
    function Initialize(init : CogInitializer)
    {
        this.Owner.AddComponentByName("BasicAI");
        this.Owner.BasicAI.Connect();
        var offsets = Array[Real3]();
        offsets.Add(Real3(0.5,-0.5,0));
        offsets.Add(Real3(0.25,-0.25,0));
        offsets.Add(Real3(-0.25,-0.25,0));
        offsets.Add(Real3(-0.5,-0.5,0));
        for(var i = 0; i<4; ++i)
        {
            this.Units.Add(this.Space.CreateAtPosition(this.ArchBoi, this.Owner.Transform.Translation));
            this.Units[i].Slave.Offset=offsets[i];
        }
        this.Xbone = Zero.Gamepads.GetGamePad(this.PlayerNum);
        Zero.Connect(this.Space, Events.LogicUpdate, this.OnLogicUpdate);
    }

    function OnLogicUpdate(event : UpdateEvent)
    {
        if(Zero.Keyboard.KeyIsPressed(Keys.F) && this.Owner.FireFlyAI == null)
        {
            this.Owner.AddComponentByName("FireFlyAI");
            foreach(var i in this.Units)
            {
                i.RigidBody.RotationLocked = true;
                var position = this.Units.FindFirstIndex(i);
                var offsets = Array[Real3]();
                offsets.Add(Real3(-0.25,0.25,0));
                offsets.Add(Real3(0.25,-0.25,0));
                offsets.Add(Real3(-0.25,-0.25,0));
                offsets.Add(Real3(0.25,0.25,0));
                i.Slave.Offset = offsets.Get(position);
                i.Transform.EulerAngles = Real3(0, 0, 0);
            }
            this.Owner.RigidBody.RotationLocked = true;
            this.Owner.RemoveComponentByName("BasicAI");
            this.Owner.RemoveComponentByName("AutoOrientToVelocity");
            this.Owner.Transform.EulerAngles = Real3(0, 0, 0);
            this.Owner.FireFlyAI.Connect();
        }
        if(this.Owner.HP!=null && this.Owner.HP.HP <= 0) this.Owner.Destroy();
        if(!this.PlayerControlled)
        {
            this.Owner.SpriteParticleSystem.Visible=false;
        } else this.Owner.SpriteParticleSystem.Visible=true;
        var time = event.RealTimePassed;
        //Console.WriteLine(event.RealTimePassed-time);
        this.NearDirection=Real3(this.Xbone.LeftStick.X*0.2,this.Xbone.LeftStick.Y*0.2,0);
        if(this.PlayerControlled)this.Owner.RigidBody.Velocity+=this.NearDirection;
        //this.Owner.Transform.SetEulerAnglesXYZ(0,0,Math.Angle2D(this.Owner.RigidBody.Velocity));
    }
    function NewBoi(yoIDontWantToNameThis : Integer)
    {
        var offsets = Array[Real3]();
        offsets.Add(Real3(-0.25,0.25,0));
        offsets.Add(Real3(0.25,-0.25,0));
        offsets.Add(Real3(-0.25,-0.25,0));
        offsets.Add(Real3(0.25,0.25,0));
        this.Units.Get(yoIDontWantToNameThis).Slave.Offset = offsets.Get(yoIDontWantToNameThis);
    }
}